/* Copyright (c) 2006-2012 Filip Wasilewski <http://en.ig.ma/> */
/* See COPYING for license details. */

/* Wavelet transforms using convolution functions defined in convolution.h */

#ifndef _WT_H_
#define _WT_H_

#include <memory.h>
#include <math.h>

#include "common.h"
#include "convolution.h"
#include "wavelets.h"


/* _a suffix - wavelet transform approximations */
/* _d suffix - wavelet transform details */

/**begin repeat
 * #type = double, float#
 */

/* Single level decomposition */
int @type@_dec_a(@type@ input[], index_t input_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len,
                 MODE mode);

int @type@_dec_d(@type@ input[], index_t input_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len,
                 MODE mode);

/* Single level reconstruction */
int @type@_rec_a(@type@ coeffs_a[], index_t coeffs_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len);

int @type@_rec_d(@type@ coeffs_d[], index_t coeffs_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len);

/* Single level IDWT reconstruction */
int @type@_idwt(@type@ coeffs_a[], index_t coeffs_a_len,
                @type@ coeffs_d[], index_t coeffs_d_len,
                Wavelet* wavelet,
                @type@ output[], index_t output_len,
                MODE mode, int fix_size_diff);

/* SWT decomposition at given level */
int @type@_swt_a(@type@ input[], index_t input_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len,
                 int level);

int @type@_swt_d(@type@ input[], index_t input_len,
                 Wavelet* wavelet,
                 @type@ output[], index_t output_len,
                 int level);

/**end repeat**/

#endif
